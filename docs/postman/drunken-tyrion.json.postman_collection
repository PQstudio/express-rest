{
	"id": "abb839d6-73f7-81b7-07ac-c057041af97b",
	"name": "drunken-tyrion",
	"description": "",
	"order": [],
	"folders": [
		{
			"id": "3f1e7f61-3c5a-f79e-b5b1-341b6de4edeb",
			"name": "File upload",
			"description": "",
			"order": [
				"71ae9744-4c76-dce3-bc54-e56a87ac5c23"
			],
			"collection_name": "drunken-tyrion",
			"collection_id": "abb839d6-73f7-81b7-07ac-c057041af97b"
		},
		{
			"id": "7c9ca101-6b1f-5ca3-6ca1-e9d5cafe9d70",
			"name": "OAuth2",
			"description": "",
			"order": [
				"d1a55353-d1e7-b0c2-0208-2e510442f7ec",
				"acad9c74-a419-4818-26d9-fb534a471bfa",
				"b84d35fd-d340-da4d-4d13-b611c8ee56f1"
			],
			"collection_name": "drunken-tyrion",
			"collection_id": "abb839d6-73f7-81b7-07ac-c057041af97b"
		},
		{
			"id": "d37ca8c2-fa79-a5e6-ebfc-7cbdf0695990",
			"name": "RateLimit",
			"description": "",
			"order": [
				"8b3170c4-3d13-88a4-532b-9664cf142c82"
			],
			"collection_name": "drunken-tyrion",
			"collection_id": "abb839d6-73f7-81b7-07ac-c057041af97b"
		},
		{
			"id": "a5bf0bee-b565-c198-b52b-c84537a8e67f",
			"name": "Users",
			"description": "",
			"order": [
				"9ea39107-10e2-3c12-c587-59e611396eaa",
				"f340fabe-f7d0-dbb9-d531-9bd412c5eb18",
				"1165c572-730b-db38-b84b-de8acbac1e38",
				"985298a3-353b-b2ea-bf81-88c31c48d56a",
				"b454d7ae-2d35-1038-b9d3-f2785b478a82",
				"993a42c5-1a5e-223c-a416-4fe1d90196a6",
				"7ec205e4-9abc-c6e0-a604-3af706e112b2",
				"b882fdce-807f-2fe3-3dd7-1cd1f36f0e17",
				"0b51f940-3467-b186-7c62-80a186afb52c",
				"b61c0bc5-4b6c-8b34-3fbb-29ab48907a2e"
			],
			"collection_name": "drunken-tyrion",
			"collection_id": "abb839d6-73f7-81b7-07ac-c057041af97b"
		}
	],
	"timestamp": 1401821428603,
	"synced": false,
	"requests": [
		{
			"id": "0b51f940-3467-b186-7c62-80a186afb52c",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{oauth2_token}}\n",
			"url": "{{app}}/api/v1/users/53a57f857955de0100000001/links/facebook",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": "{\n  \"accessToken\": \"CAACEdEose0cBAKGvZB8kr07yziuWN6XZBvIAKXDPpTHP40XZCABdtuVo82TyXkynVc3dwrUMkEPDsbOs0HOigvROJNx1LUtGBBCc63Xsp9uxSPKJY3HHwYNBF7QIKZCCPA49XvMtlEvJp4wPCfv0TVcBQFZCCiH9pt41P6ulPcyicM6MOLdVZBeWEaFQEHwZBIZD\"\n}",
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"time": 1407672069884,
			"name": "/api/v1/users/{id}/links/{slug}",
			"description": "#### Description\nLinks user to social account.\n  \n  \n#### Parameters\n__Authorization__: yes  \n.  \n#####template:   \n  * __id\\*__: user id,\n  * __slug\\*__: one of values - facebook\n  \n#####json:   \n  * __access\\_token\\*__: access token for given social account as slug  \n  \n  \n#### Request example\n    {\n      \"access_token\": \"CAACEdEose0cBAKGvZB8kr07yziuWN6XZBvIAKXDPpTHP40XZCABdtuVo82TyXkynVc3dwrUMkEPDsbOs0HOigvROJNx1LUtGBBCc63Xsp9uxSPKJY3HHwYNBF7QIKZCCPA49XvMtlEvJp4wPCfv0TVcBQFZCCiH9pt41P6ulPcyicM6MOLdVZBeWEaFQEHwZBIZD\"\n    }\n  \n#### Response example\n\t201 Created\n  \n#### Error codes\n400 Bad request:  \n\n    {\n      error: \"wrong_access_token\",\n      errorMessage: \"Provided access_token is incorrect or expired\"\n    }\n  \n400 Bad request:  \n\n    {\n      error: \"unknown_provider\",\n      errorMessage: \"Provider specified doesn't exist\"\n    }",
			"collectionId": "abb839d6-73f7-81b7-07ac-c057041af97b",
			"responses": [],
			"synced": false
		},
		{
			"id": "1165c572-730b-db38-b84b-de8acbac1e38",
			"headers": "Content-Type: application/json\n",
			"url": "{{app}}/api/v1/users",
			"pathVariables": {},
			"method": "POST",
			"data": "{\n  \"email\": \"gregory904@gmail.com\",\n  \"password\": \"qazxsw21!\"\n}",
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"time": 1403365607764,
			"name": "/api/v1/users",
			"description": "Create new user",
			"collectionId": "abb839d6-73f7-81b7-07ac-c057041af97b",
			"responses": [],
			"synced": false
		},
		{
			"id": "71ae9744-4c76-dce3-bc54-e56a87ac5c23",
			"headers": "",
			"url": "{{app}}/api/v1/files?type=profile",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "file",
					"value": "",
					"type": "file"
				}
			],
			"dataMode": "params",
			"name": "/api/v1/files",
			"description": "Validate and save files to tmp directory, returns file id",
			"descriptionFormat": "html",
			"time": 1405005348220,
			"version": 2,
			"responses": [],
			"tests": "",
			"collectionId": "abb839d6-73f7-81b7-07ac-c057041af97b",
			"synced": false
		},
		{
			"id": "7ec205e4-9abc-c6e0-a604-3af706e112b2",
			"headers": "Content-Type: application/json\n",
			"url": "{{app}}/api/v1/users/change-password",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PATCH",
			"data": "{\n  \"token\": \"mvr8tMgdQAvs_5zS8BhYOlHfuZ4unj3j9nsiT4CBvS4\",\n  \"password\": \"qazxsw21!\"\n}",
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"time": 1407612885999,
			"name": "/api/v1/users/change-password",
			"description": "#### Description\nChange user password (after password reset).  \n\n  \n#### Parameters\n__Authorization__: no  \n.  \n#####json:   \n  * __token\\*__: token for changing email,\n  * __password\\*__: new password\n  \n  \n#### Request example  \n  \n    {\n      \"token\": \"mvr8tMgdQAvs_5zS8BhYOlHfuZ4unj3j9nsiT4CBvS4\",\n      \"password\": \"newpass\"\n    }\n  \n#### Response example\n\t204 No content\n  \n#### Error codes\n400 Bad Request:\n\n    {\n      error: \"token_doesnt_exist\",\n      errorMessage: \"Providen token does not exist in the database\",\n      code: 400\n    }",
			"collectionId": "abb839d6-73f7-81b7-07ac-c057041af97b",
			"responses": [],
			"synced": false
		},
		{
			"id": "8b3170c4-3d13-88a4-532b-9664cf142c82",
			"headers": "Content-Type: application/json\n",
			"url": "{{app}}/api/v1/rate-limit/remove",
			"pathVariables": {},
			"method": "POST",
			"data": "{\n  \"challenge\": \"\",\n  \"response\": \"\"\n}",
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"time": 1404996821610,
			"name": "/api/v1/rate-limit/remove",
			"description": "#### Description\nRemove rate limit from ip.\n  \n  \n#### Parameters\n__Authorization__: no  \n.  \n\n#####json:   \n  * __challenge\\*__: reCaptcha challenge token,  \n  * __response\\*__: user response (captcha),  \n  \n  \n#### Request example\n    {\n      \"challenge\": \"38gh84g498hbger0ttyu\",\n      \"response\": \"sdf6i sg45\"\n    }\n  \n#### Response example\n\t200 OK\n  \n#### Error codes\n422:  \n\n    {\n      error: \"invalid-request-cookie\"\n    }",
			"collectionId": "abb839d6-73f7-81b7-07ac-c057041af97b",
			"responses": [],
			"synced": false
		},
		{
			"id": "985298a3-353b-b2ea-bf81-88c31c48d56a",
			"headers": "Authorization: Bearer {{oauth2_token}}\nContent-Type: application/json\n",
			"url": "{{app}}/api/v1/users/53a57f857955de0100000001",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PATCH",
			"data": "{\n  \"email\": \"gregory90@gmail.com\",\n  \"currentPassword\": \"qazxsw21!0\"\n}",
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"time": 1407604575148,
			"name": "/api/v1/users/{id}",
			"description": "#### Description\nUpdate user data\n  \n  \n#### Parameters\n__Authorization__: yes  \n.  \n#####template:\n  * __id__: user id  \n  \n#####json:   \n  * __email__: user email,  \n  * __password__: user password, \n  * __currentPassword\\*__: current user password\n  \n  \n#### Request example\n    {\n      \"email\": \"employee@praceon.pl\",\n      \"password\": \"newpassword\",\n      \"currentPassword\": \"qazxsw21!\"\n    }\n  \n#### Response example\n\t204 No content\n  \n#### Error codes\n422 Validation errors:  \n\n    {\n      meta: {\n        error: \"validation_error\",\n        errorMessage: \"Provided data is incorrect. Model did not passed validation.\",\n        code: 422\n      },\n      errors: [\n        {\n          property_path: \"email\",\n          message: \"fos_user.email.already_used\"\n        }\n      ]\n    }\n    \n422 Bad or no _currentPassword_ provided:\n\n    {\n      meta: {\n        error: \"bad_current_password\",\n        errorMessage: \"Bad current password provided.\",\n        code: 422\n      }\n    }",
			"collectionId": "abb839d6-73f7-81b7-07ac-c057041af97b",
			"responses": [],
			"synced": false
		},
		{
			"id": "993a42c5-1a5e-223c-a416-4fe1d90196a6",
			"headers": "Content-Type: application/json\n",
			"url": "{{app}}/api/v1/users/forgot-password",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": "{\n  \"email\": \"gregory90@gmail.com\"\n}",
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"time": 1407612822587,
			"name": "/api/v1/users/forgot-password",
			"description": "#### Description\n\"I don't remember my password\" option.\n\nMessage with url for changing password will be send at given email.\n  \n\n  \n#### Parameters\n__Authorization__: no  \n.  \n#####json:   \n  * __email\\*__: user email\n  \n  \n#### Request example  \n\n    {\n      \"email\": \"mail@mail.pl\"\n    }\n  \n#### Response example\n\t204 No content\n  \n#### Error codes\n",
			"collectionId": "abb839d6-73f7-81b7-07ac-c057041af97b",
			"responses": [],
			"synced": false
		},
		{
			"id": "9ea39107-10e2-3c12-c587-59e611396eaa",
			"headers": "Authorization: Bearer {{oauth2_token}}\n",
			"url": "{{app}}/api/v1/users/me",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"name": "/api/v1/users/me",
			"description": "Get data about logged in user",
			"descriptionFormat": "html",
			"time": 1401821473854,
			"version": 2,
			"responses": [],
			"tests": "",
			"collectionId": "abb839d6-73f7-81b7-07ac-c057041af97b",
			"synced": false
		},
		{
			"id": "acad9c74-a419-4818-26d9-fb534a471bfa",
			"headers": "Authorization: Bearer {{oauth2_token}}\n",
			"url": "{{app}}/oauth/v2/token/invalidate",
			"pathVariables": {},
			"preRequestScript": "",
			"method": "PUT",
			"data": [],
			"dataMode": "params",
			"name": "/oauth/v2/token/invalidate",
			"description": "#### Description\nInvalidate token passed in Authorization header.  \n\n  \n#### Parameters\n__Authorization__: yes  \n\n  \n#### Request example\n    -\n\n  \n  \n#### Response example\n\t204 No Content\n",
			"descriptionFormat": "html",
			"time": 1408863999371,
			"version": 2,
			"responses": [],
			"tests": "",
			"collectionId": "abb839d6-73f7-81b7-07ac-c057041af97b",
			"synced": false
		},
		{
			"id": "b454d7ae-2d35-1038-b9d3-f2785b478a82",
			"headers": "Authorization: Bearer {{oauth2_token}}\nContent-Type: application/json\n",
			"url": "{{app}}/api/v1/users/53a5a01a9ea0e5de02000001",
			"pathVariables": {},
			"method": "DELETE",
			"data": "{\n  \"currentPassword\": \"qazxsw21!\"\n}",
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"time": 1405531447637,
			"name": "/api/v1/users/{id}",
			"description": "#### Description\nDelete user account.\n  \n  \n#### Parameters\n__Authorization__: yes  \n.  \n#####template:   \n  * __currentPassword\\*__: current user password\n  \n  \n#### Request example  \n\n    {\n      \"currentPassword\": \"qazxsw21!\"\n    }\n  \n#### Response example\n\t204 No content\n  \n#### Error codes\n422 Bad or no _currentPassword_ provided:\n\n    {\n      meta: {\n        error: \"bad_current_password\",\n        errorMessage: \"Bad current password provided.\",\n        code: 422\n      }\n    }",
			"collectionId": "abb839d6-73f7-81b7-07ac-c057041af97b",
			"responses": [],
			"synced": false
		},
		{
			"id": "b61c0bc5-4b6c-8b34-3fbb-29ab48907a2e",
			"headers": "Authorization: Bearer {{oauth2_token}}\n",
			"url": "{{app}}/api/v1/users/53a57f857955de0100000001/links/facebook",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"time": 1407670853942,
			"name": "/api/v1/users/{id}/links/{slug}",
			"description": "#### Description\nDelete user link to social account.\n  \n  \n#### Parameters\n__Authorization__: yes  \n.  \n#####template:   \n  * __id\\*__: user id,\n  * __slug\\*__: one of values - facebook\n  \n  \n#### Request example  \n\n    -\n  \n#### Response example\n\t204 No content\n  \n#### Error codes\n400 Bad request:  \n\n    {\n      error: \"unknown_provider\",\n      errorMessage: \"Provider specified doesn't exist\"\n    }",
			"collectionId": "abb839d6-73f7-81b7-07ac-c057041af97b",
			"responses": [],
			"synced": false
		},
		{
			"id": "b84d35fd-d340-da4d-4d13-b611c8ee56f1",
			"headers": "Authorization: Bearer {{oauth2_token}}\n",
			"url": "{{app}}/oauth/v2/token/check",
			"pathVariables": {},
			"preRequestScript": "",
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"name": "/oauth/v2/token/check",
			"description": "#### Description\nCheck token status passed in Authorization header\n\n  \n#### Parameters\n__Authorization__: yes   \n\n  \n#### Request example\n    -\n\n  \n  \n#### Response example\n\t{\n      status: \"unauthorized\"\n    }\nor:  \n\n    {\n      status: \"authorized\"\n    }",
			"descriptionFormat": "html",
			"time": 1408863395395,
			"version": 2,
			"responses": [],
			"tests": "",
			"collectionId": "abb839d6-73f7-81b7-07ac-c057041af97b",
			"synced": false
		},
		{
			"id": "b882fdce-807f-2fe3-3dd7-1cd1f36f0e17",
			"headers": "Authorization: Bearer {{oauth2_token}}\n",
			"url": "{{app}}/api/v1/users/53a57f857955de0100000001/links",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"time": 1407617470738,
			"name": "/api/v1/users/{id}/links",
			"description": "#### Description\nGet user linked accounts.  \n\nThere are few types of accounts:  \n__password__: normal account,  \n__facebook__: facebook linked account  \n\nSocial accounts returns user id of that social account(e.g. facebook returns facebook user id).  \nNormal account(password) returns user email in system.\n  \n#### Parameters\n__Authorization__: yes  \n.  \n#####template:\n  * __id__: user id  \n  \n  \n#### Request example\n    \n    -\n  \n#### Response example\n\t200 OK\n    {\n      provider: {\n        password: \"admin@domain.pl\",\n        facebook: \"2309587234\"\n      }\n    }",
			"collectionId": "abb839d6-73f7-81b7-07ac-c057041af97b",
			"responses": [],
			"synced": false
		},
		{
			"id": "d1a55353-d1e7-b0c2-0208-2e510442f7ec",
			"headers": "Content-Type: application/json\n",
			"url": "{{app}}/oauth/v2/token",
			"pathVariables": {},
			"method": "POST",
			"data": "{\n  \"client_id\": \"clientid\",\n  \"client_secret\": \"clientsecret\",\n  \"grant_type\": \"password\",\n  \"username\": \"gregory90@gmail.com\",\n  \"password\": \"qazxsw21!\",\n  \"refresh_token\": \"\",\n  \"facebook_token\": \"CAACEdEose0cBAJyrVArQt38PTtzhIMkMYKviWkZAUZCblx1bkLyeiC5TEZBkXrUymAoakct56DCT9MkO6eBNNrG2AwBZCCqGNYYo00akxZBZAiX6E2LLCcZBfJ1MbduXqGkw8sjpCySJxFmMMhZCjVJfWzTU3ztqGe5HmSp6gYXWGppJkvawzBKAwhdsQ8PDlDUZD\"\n}",
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"time": 1404995724256,
			"name": "/oauth/v2/token",
			"description": "",
			"collectionId": "abb839d6-73f7-81b7-07ac-c057041af97b",
			"responses": [],
			"synced": false
		},
		{
			"id": "f340fabe-f7d0-dbb9-d531-9bd412c5eb18",
			"headers": "Authorization: Bearer {{oauth2_token}}\n",
			"url": "{{app}}/api/v1/users/53a57f857955de0100000001",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "",
			"time": 1403357943205,
			"name": "/api/v1/users/{id}",
			"description": "Get data about user with given id",
			"collectionId": "abb839d6-73f7-81b7-07ac-c057041af97b",
			"responses": [],
			"synced": false
		}
	]
}